{
  "sksl": {
    "entrypoint": "liquid_glass_lighting_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform vec2 uOffset;\nuniform float uThickness;\nuniform vec4 uLightConfig;\nuniform shader uGeometryTexture;\nuniform half2 uGeometryTexture_size;\n\nvec4 fragColor;\n\nfloat uLightIntensity;\nfloat uAmbientStrength;\nvec2 uLightDirection;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec2 FLT_flutter_local_decodeDisplacement(vec4 encoded, float maxDisplacement)\n{\n    vec2 normalized = encoded.xy;\n    vec2 displacement = ((normalized - vec2(0.5)) * 2.0) * maxDisplacement;\n    return displacement;\n}\n\nvoid FLT_main()\n{\n    uLightIntensity = uLightConfig.x;\n    uAmbientStrength = uLightConfig.y;\n    uLightDirection = uLightConfig.zw;\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord() - uOffset;\n    vec2 screenUV = vec2(fragCoord.x / uSize.x, fragCoord.y / uSize.y);\n    vec4 geoData = uGeometryTexture.eval(uGeometryTexture_size * ( screenUV));\n    vec4 param = geoData;\n    float param_1 = uThickness;\n    vec2 displacement_1 = FLT_flutter_local_decodeDisplacement(param, param_1);\n    float height = geoData.z * uThickness;\n    float alpha = geoData.w;\n    if (alpha < 0.00999999977648258209228515625)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    float normalizedHeight = geoData.z;\n    float edgeFactor = 1.0 - smoothstep(0.0, 0.5, normalizedHeight);\n    if (edgeFactor < 0.00999999977648258209228515625)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    vec2 normalXY = normalize(displacement_1);\n    float mainLight = max(0.0, dot(normalXY, uLightDirection));\n    float oppositeLight = max(0.0, dot(normalXY, -uLightDirection));\n    float totalInfluence = mainLight + (oppositeLight * 0.800000011920928955078125);\n    float directional = (((totalInfluence * totalInfluence) * uLightIntensity) * 2.0) * 0.699999988079071044921875;\n    float ambient = uAmbientStrength * 0.4000000059604644775390625;\n    float brightness = (directional + ambient) * edgeFactor;\n    fragColor = vec4(vec3(brightness), brightness * alpha);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 0,
        "name": "uGeometryTexture",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uOffset",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uThickness",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "uLightConfig",
        "rows": 4,
        "type": 10
      }
    ]
  }
}